{"ast":null,"code":"import React,{useState,useEffect}from'react';import{createClient}from'@supabase/supabase-js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;// If you prefer, you can import from .env directly, or define them in the .env\nconst supabase=createClient(supabaseUrl,supabaseAnonKey);function App(){const[session,setSession]=useState(null);const[role,setRole]=useState('');const[sellerEmail,setSellerEmail]=useState('');const[dealId,setDealId]=useState('');const[amount,setAmount]=useState('');useEffect(()=>{supabase.auth.getSession().then(_ref=>{let{data:{session}}=_ref;setSession(session);});supabase.auth.onAuthStateChange((_event,session)=>{setSession(session);});},[]);const signUp=async()=>{const email=prompt(\"Enter your email\");const password=prompt(\"Enter your password\");const{data,error}=await supabase.auth.signUp({email,password});if(error)alert(error.message);};const signIn=async()=>{const email=prompt(\"Enter your email\");const password=prompt(\"Enter your password\");const{data,error}=await supabase.auth.signInWithPassword({email,password});if(error)alert(error.message);};const signOut=async()=>{await supabase.auth.signOut();setRole('');};// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// CREATE DEAL\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst handleCreateDeal=async()=>{if(!sellerEmail){alert(\"Please enter seller's email\");return;}// 1) find seller's user record in Supabase 'profiles' table\n//    We assume there's a 'profiles' table with columns: id, email, wallet_address, ...\nlet{data:sellers,error:sellerError}=await supabase.from('profiles').select('*').eq('email',sellerEmail);if(sellerError){alert(sellerError.message);return;}if(!sellers||sellers.length===0){alert(\"Seller not found\");return;}const seller=sellers[0];// 2) Insert new deal in Supabase\nlet{data:newDeals,error:dealError}=await supabase.from('deals').insert([{buyer_id:session.user.id,seller_id:seller.id,status:'PENDING'}]).select();if(dealError){alert(dealError.message);return;}const newDeal=newDeals[0];const dbDealId=newDeal.id;// 3) Call backend to create the on-chain deal\ntry{const response=await fetch('http://localhost:4242/create-escrow-deal',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({dbDealId})});const json=await response.json();if(!json.success){alert('Failed to create on-chain deal: '+json.message);return;}// 4) Update the Supabase record with the returned onChain ID\nconst{data:updated,error:updateError}=await supabase.from('deals').update({deal_id_on_chain:json.dealIdOnChain}).eq('id',dbDealId);if(updateError){alert(\"Couldn't update deal with on-chain ID\");return;}alert(\"Deal created successfully! DB ID: \".concat(dbDealId,\", On-chain ID: \").concat(json.dealIdOnChain));}catch(err){console.error(err);alert(\"Error calling create-escrow-deal\");}};// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// PAY DEAL (STRIPE)\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst handlePayDeal=async()=>{if(!dealId||!amount){alert(\"Please enter dealId and amount in USD\");return;}const intAmount=parseInt(amount)*100;// convert to cents\ntry{const res=await fetch('http://localhost:4242/create-checkout-session',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({dealId,amount:intAmount})});const json=await res.json();if(json.url){window.location.href=json.url;// redirect to Stripe\n}else{alert(\"Failed to create checkout session\");}}catch(err){console.error(err);alert(\"Error creating checkout session\");}};// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// RELEASE FUNDS\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst handleReleaseFunds=async()=>{if(!dealId){alert(\"Please enter dealId\");return;}try{const res=await fetch('http://localhost:4242/release-funds',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({dealId})});const json=await res.json();if(json.success){alert(\"Funds released to seller!\");}else{alert(\"Failed to release funds: \"+json.message);}}catch(err){console.error(err);alert(\"Error releasing funds\");}};// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// RENDER\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nif(!session){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome - Please Sign In or Sign Up\"}),/*#__PURE__*/_jsx(\"button\",{onClick:signIn,children:\"Sign In\"}),/*#__PURE__*/_jsx(\"button\",{onClick:signUp,children:\"Sign Up\"})]});}if(!role){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Logged in as \",session.user.email]}),/*#__PURE__*/_jsx(\"p\",{children:\"Select a role:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setRole('buyer'),children:\"Buyer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setRole('seller'),children:\"Seller\"}),/*#__PURE__*/_jsx(\"button\",{onClick:signOut,children:\"Sign Out\"})]});}if(role==='buyer'){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Buyer Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Logged in: \",session.user.email]}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'20px 0'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create a Deal\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Seller Email\",value:sellerEmail,onChange:e=>setSellerEmail(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateDeal,children:\"Create Deal\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'20px 0'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Pay for Deal (Stripe)\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Deal ID in DB\",value:dealId,onChange:e=>setDealId(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Amount in USD\",value:amount,onChange:e=>setAmount(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePayDeal,children:\"Pay\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'20px 0'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Release Funds (Buyer Confirms Delivery)\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Deal ID in DB\",value:dealId,onChange:e=>setDealId(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReleaseFunds,children:\"Release Funds\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:signOut,children:\"Sign Out\"})]});}if(role==='seller'){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Seller Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Logged in: \",session.user.email]}),/*#__PURE__*/_jsx(\"p\",{children:\"Here you could list your deals or track shipments...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:signOut,children:\"Sign Out\"})]});}}export default App;","map":{"version":3,"names":["React","useState","useEffect","createClient","jsx","_jsx","jsxs","_jsxs","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","App","session","setSession","role","setRole","sellerEmail","setSellerEmail","dealId","setDealId","amount","setAmount","auth","getSession","then","_ref","data","onAuthStateChange","_event","signUp","email","prompt","password","error","alert","message","signIn","signInWithPassword","signOut","handleCreateDeal","sellers","sellerError","from","select","eq","length","seller","newDeals","dealError","insert","buyer_id","user","id","seller_id","status","newDeal","dbDealId","response","fetch","method","headers","body","JSON","stringify","json","success","updated","updateError","update","deal_id_on_chain","dealIdOnChain","concat","err","console","handlePayDeal","intAmount","parseInt","res","url","window","location","href","handleReleaseFunds","style","padding","children","onClick","margin","placeholder","value","onChange","e","target"],"sources":["C:/Users/harsh/Downloads/escrow_project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL; \nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// If you prefer, you can import from .env directly, or define them in the .env\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nfunction App() {\n  const [session, setSession] = useState(null);\n  const [role, setRole] = useState('');\n  \n  const [sellerEmail, setSellerEmail] = useState('');\n  const [dealId, setDealId] = useState('');\n  const [amount, setAmount] = useState('');\n\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n    });\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  }, []);\n\n  const signUp = async () => {\n    const email = prompt(\"Enter your email\");\n    const password = prompt(\"Enter your password\");\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) alert(error.message);\n  };\n\n  const signIn = async () => {\n    const email = prompt(\"Enter your email\");\n    const password = prompt(\"Enter your password\");\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) alert(error.message);\n  };\n\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    setRole('');\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // CREATE DEAL\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handleCreateDeal = async () => {\n    if (!sellerEmail) {\n      alert(\"Please enter seller's email\");\n      return;\n    }\n    // 1) find seller's user record in Supabase 'profiles' table\n    //    We assume there's a 'profiles' table with columns: id, email, wallet_address, ...\n    let { data: sellers, error: sellerError } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('email', sellerEmail);\n\n    if (sellerError) {\n      alert(sellerError.message);\n      return;\n    }\n    if (!sellers || sellers.length === 0) {\n      alert(\"Seller not found\");\n      return;\n    }\n    const seller = sellers[0];\n\n    // 2) Insert new deal in Supabase\n    let { data: newDeals, error: dealError } = await supabase\n      .from('deals')\n      .insert([\n        {\n          buyer_id: session.user.id,\n          seller_id: seller.id,\n          status: 'PENDING'\n        }\n      ])\n      .select();\n\n    if (dealError) {\n      alert(dealError.message);\n      return;\n    }\n\n    const newDeal = newDeals[0];\n    const dbDealId = newDeal.id;\n\n    // 3) Call backend to create the on-chain deal\n    try {\n      const response = await fetch('http://localhost:4242/create-escrow-deal', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ dbDealId })\n      });\n      const json = await response.json();\n      if (!json.success) {\n        alert('Failed to create on-chain deal: ' + json.message);\n        return;\n      }\n\n      // 4) Update the Supabase record with the returned onChain ID\n      const { data: updated, error: updateError } = await supabase\n        .from('deals')\n        .update({ deal_id_on_chain: json.dealIdOnChain })\n        .eq('id', dbDealId);\n\n      if (updateError) {\n        alert(\"Couldn't update deal with on-chain ID\");\n        return;\n      }\n\n      alert(`Deal created successfully! DB ID: ${dbDealId}, On-chain ID: ${json.dealIdOnChain}`);\n\n    } catch (err) {\n      console.error(err);\n      alert(\"Error calling create-escrow-deal\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // PAY DEAL (STRIPE)\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handlePayDeal = async () => {\n    if (!dealId || !amount) {\n      alert(\"Please enter dealId and amount in USD\");\n      return;\n    }\n\n    const intAmount = parseInt(amount) * 100; // convert to cents\n    try {\n      const res = await fetch('http://localhost:4242/create-checkout-session', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ dealId, amount: intAmount })\n      });\n      const json = await res.json();\n      if (json.url) {\n        window.location.href = json.url; // redirect to Stripe\n      } else {\n        alert(\"Failed to create checkout session\");\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error creating checkout session\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // RELEASE FUNDS\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handleReleaseFunds = async () => {\n    if (!dealId) {\n      alert(\"Please enter dealId\");\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:4242/release-funds', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ dealId })\n      });\n      const json = await res.json();\n      if (json.success) {\n        alert(\"Funds released to seller!\");\n      } else {\n        alert(\"Failed to release funds: \" + json.message);\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error releasing funds\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // RENDER\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  if (!session) {\n    return (\n      <div style={{ padding: 20 }}>\n        <h2>Welcome - Please Sign In or Sign Up</h2>\n        <button onClick={signIn}>Sign In</button>\n        <button onClick={signUp}>Sign Up</button>\n      </div>\n    );\n  }\n\n  if (!role) {\n    return (\n      <div style={{ padding: 20 }}>\n        <h3>Logged in as {session.user.email}</h3>\n        <p>Select a role:</p>\n        <button onClick={() => setRole('buyer')}>Buyer</button>\n        <button onClick={() => setRole('seller')}>Seller</button>\n        <button onClick={signOut}>Sign Out</button>\n      </div>\n    );\n  }\n\n  if (role === 'buyer') {\n    return (\n      <div style={{ padding: 20 }}>\n        <h2>Buyer Dashboard</h2>\n        <p>Logged in: {session.user.email}</p>\n\n        <div style={{ margin: '20px 0' }}>\n          <h3>Create a Deal</h3>\n          <input\n            placeholder=\"Seller Email\"\n            value={sellerEmail}\n            onChange={(e) => setSellerEmail(e.target.value)}\n          />\n          <button onClick={handleCreateDeal}>Create Deal</button>\n        </div>\n\n        <div style={{ margin: '20px 0' }}>\n          <h3>Pay for Deal (Stripe)</h3>\n          <input\n            placeholder=\"Deal ID in DB\"\n            value={dealId}\n            onChange={(e) => setDealId(e.target.value)}\n          />\n          <input\n            placeholder=\"Amount in USD\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n          <button onClick={handlePayDeal}>Pay</button>\n        </div>\n\n        <div style={{ margin: '20px 0' }}>\n          <h3>Release Funds (Buyer Confirms Delivery)</h3>\n          <input\n            placeholder=\"Deal ID in DB\"\n            value={dealId}\n            onChange={(e) => setDealId(e.target.value)}\n          />\n          <button onClick={handleReleaseFunds}>Release Funds</button>\n        </div>\n\n        <button onClick={signOut}>Sign Out</button>\n      </div>\n    );\n  }\n\n  if (role === 'seller') {\n    return (\n      <div style={{ padding: 20 }}>\n        <h2>Seller Dashboard</h2>\n        <p>Logged in: {session.user.email}</p>\n        <p>Here you could list your deals or track shipments...</p>\n        <button onClick={signOut}>Sign Out</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,YAAY,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,KAAM,CAAAC,WAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACtD,KAAM,CAAAC,eAAe,CAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B,CAE/D;AACA,KAAM,CAAAC,QAAQ,CAAGX,YAAY,CAACK,WAAW,CAAEI,eAAe,CAAC,CAE3D,QAAS,CAAAG,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACiB,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAEpC,KAAM,CAACmB,WAAW,CAAEC,cAAc,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACqB,MAAM,CAAEC,SAAS,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACuB,MAAM,CAAEC,SAAS,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CAExCC,SAAS,CAAC,IAAM,CACdY,QAAQ,CAACY,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAACC,IAAA,EAA2B,IAA1B,CAAEC,IAAI,CAAE,CAAEd,OAAQ,CAAE,CAAC,CAAAa,IAAA,CACpDZ,UAAU,CAACD,OAAO,CAAC,CACrB,CAAC,CAAC,CACFF,QAAQ,CAACY,IAAI,CAACK,iBAAiB,CAAC,CAACC,MAAM,CAAEhB,OAAO,GAAK,CACnDC,UAAU,CAACD,OAAO,CAAC,CACrB,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAiB,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,KAAM,CAAAC,KAAK,CAAGC,MAAM,CAAC,kBAAkB,CAAC,CACxC,KAAM,CAAAC,QAAQ,CAAGD,MAAM,CAAC,qBAAqB,CAAC,CAC9C,KAAM,CAAEL,IAAI,CAAEO,KAAM,CAAC,CAAG,KAAM,CAAAvB,QAAQ,CAACY,IAAI,CAACO,MAAM,CAAC,CACjDC,KAAK,CACLE,QACF,CAAC,CAAC,CACF,GAAIC,KAAK,CAAEC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,KAAM,CAAAN,KAAK,CAAGC,MAAM,CAAC,kBAAkB,CAAC,CACxC,KAAM,CAAAC,QAAQ,CAAGD,MAAM,CAAC,qBAAqB,CAAC,CAC9C,KAAM,CAAEL,IAAI,CAAEO,KAAM,CAAC,CAAG,KAAM,CAAAvB,QAAQ,CAACY,IAAI,CAACe,kBAAkB,CAAC,CAC7DP,KAAK,CACLE,QACF,CAAC,CAAC,CACF,GAAIC,KAAK,CAAEC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CACjC,CAAC,CAED,KAAM,CAAAG,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAA5B,QAAQ,CAACY,IAAI,CAACgB,OAAO,CAAC,CAAC,CAC7BvB,OAAO,CAAC,EAAE,CAAC,CACb,CAAC,CAED;AACA;AACA;AACA,KAAM,CAAAwB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CAACvB,WAAW,CAAE,CAChBkB,KAAK,CAAC,6BAA6B,CAAC,CACpC,OACF,CACA;AACA;AACA,GAAI,CAAER,IAAI,CAAEc,OAAO,CAAEP,KAAK,CAAEQ,WAAY,CAAC,CAAG,KAAM,CAAA/B,QAAQ,CACvDgC,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,OAAO,CAAE5B,WAAW,CAAC,CAE3B,GAAIyB,WAAW,CAAE,CACfP,KAAK,CAACO,WAAW,CAACN,OAAO,CAAC,CAC1B,OACF,CACA,GAAI,CAACK,OAAO,EAAIA,OAAO,CAACK,MAAM,GAAK,CAAC,CAAE,CACpCX,KAAK,CAAC,kBAAkB,CAAC,CACzB,OACF,CACA,KAAM,CAAAY,MAAM,CAAGN,OAAO,CAAC,CAAC,CAAC,CAEzB;AACA,GAAI,CAAEd,IAAI,CAAEqB,QAAQ,CAAEd,KAAK,CAAEe,SAAU,CAAC,CAAG,KAAM,CAAAtC,QAAQ,CACtDgC,IAAI,CAAC,OAAO,CAAC,CACbO,MAAM,CAAC,CACN,CACEC,QAAQ,CAAEtC,OAAO,CAACuC,IAAI,CAACC,EAAE,CACzBC,SAAS,CAAEP,MAAM,CAACM,EAAE,CACpBE,MAAM,CAAE,SACV,CAAC,CACF,CAAC,CACDX,MAAM,CAAC,CAAC,CAEX,GAAIK,SAAS,CAAE,CACbd,KAAK,CAACc,SAAS,CAACb,OAAO,CAAC,CACxB,OACF,CAEA,KAAM,CAAAoB,OAAO,CAAGR,QAAQ,CAAC,CAAC,CAAC,CAC3B,KAAM,CAAAS,QAAQ,CAAGD,OAAO,CAACH,EAAE,CAE3B;AACA,GAAI,CACF,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,0CAA0C,CAAE,CACvEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAS,CAAC,CACnC,CAAC,CAAC,CACF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,GAAI,CAACA,IAAI,CAACC,OAAO,CAAE,CACjB/B,KAAK,CAAC,kCAAkC,CAAG8B,IAAI,CAAC7B,OAAO,CAAC,CACxD,OACF,CAEA;AACA,KAAM,CAAET,IAAI,CAAEwC,OAAO,CAAEjC,KAAK,CAAEkC,WAAY,CAAC,CAAG,KAAM,CAAAzD,QAAQ,CACzDgC,IAAI,CAAC,OAAO,CAAC,CACb0B,MAAM,CAAC,CAAEC,gBAAgB,CAAEL,IAAI,CAACM,aAAc,CAAC,CAAC,CAChD1B,EAAE,CAAC,IAAI,CAAEY,QAAQ,CAAC,CAErB,GAAIW,WAAW,CAAE,CACfjC,KAAK,CAAC,uCAAuC,CAAC,CAC9C,OACF,CAEAA,KAAK,sCAAAqC,MAAA,CAAsCf,QAAQ,oBAAAe,MAAA,CAAkBP,IAAI,CAACM,aAAa,CAAE,CAAC,CAE5F,CAAE,MAAOE,GAAG,CAAE,CACZC,OAAO,CAACxC,KAAK,CAACuC,GAAG,CAAC,CAClBtC,KAAK,CAAC,kCAAkC,CAAC,CAC3C,CACF,CAAC,CAED;AACA;AACA;AACA,KAAM,CAAAwC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACxD,MAAM,EAAI,CAACE,MAAM,CAAE,CACtBc,KAAK,CAAC,uCAAuC,CAAC,CAC9C,OACF,CAEA,KAAM,CAAAyC,SAAS,CAAGC,QAAQ,CAACxD,MAAM,CAAC,CAAG,GAAG,CAAE;AAC1C,GAAI,CACF,KAAM,CAAAyD,GAAG,CAAG,KAAM,CAAAnB,KAAK,CAAC,+CAA+C,CAAE,CACvEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAE7C,MAAM,CAAEE,MAAM,CAAEuD,SAAU,CAAC,CACpD,CAAC,CAAC,CACF,KAAM,CAAAX,IAAI,CAAG,KAAM,CAAAa,GAAG,CAACb,IAAI,CAAC,CAAC,CAC7B,GAAIA,IAAI,CAACc,GAAG,CAAE,CACZC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAGjB,IAAI,CAACc,GAAG,CAAE;AACnC,CAAC,IAAM,CACL5C,KAAK,CAAC,mCAAmC,CAAC,CAC5C,CACF,CAAE,MAAOsC,GAAG,CAAE,CACZC,OAAO,CAACxC,KAAK,CAACuC,GAAG,CAAC,CAClBtC,KAAK,CAAC,iCAAiC,CAAC,CAC1C,CACF,CAAC,CAED;AACA;AACA;AACA,KAAM,CAAAgD,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CAAChE,MAAM,CAAE,CACXgB,KAAK,CAAC,qBAAqB,CAAC,CAC5B,OACF,CACA,GAAI,CACF,KAAM,CAAA2C,GAAG,CAAG,KAAM,CAAAnB,KAAK,CAAC,qCAAqC,CAAE,CAC7DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAE7C,MAAO,CAAC,CACjC,CAAC,CAAC,CACF,KAAM,CAAA8C,IAAI,CAAG,KAAM,CAAAa,GAAG,CAACb,IAAI,CAAC,CAAC,CAC7B,GAAIA,IAAI,CAACC,OAAO,CAAE,CAChB/B,KAAK,CAAC,2BAA2B,CAAC,CACpC,CAAC,IAAM,CACLA,KAAK,CAAC,2BAA2B,CAAG8B,IAAI,CAAC7B,OAAO,CAAC,CACnD,CACF,CAAE,MAAOqC,GAAG,CAAE,CACZC,OAAO,CAACxC,KAAK,CAACuC,GAAG,CAAC,CAClBtC,KAAK,CAAC,uBAAuB,CAAC,CAChC,CACF,CAAC,CAED;AACA;AACA;AAEA,GAAI,CAACtB,OAAO,CAAE,CACZ,mBACET,KAAA,QAAKgF,KAAK,CAAE,CAAEC,OAAO,CAAE,EAAG,CAAE,CAAAC,QAAA,eAC1BpF,IAAA,OAAAoF,QAAA,CAAI,qCAAmC,CAAI,CAAC,cAC5CpF,IAAA,WAAQqF,OAAO,CAAElD,MAAO,CAAAiD,QAAA,CAAC,SAAO,CAAQ,CAAC,cACzCpF,IAAA,WAAQqF,OAAO,CAAEzD,MAAO,CAAAwD,QAAA,CAAC,SAAO,CAAQ,CAAC,EACtC,CAAC,CAEV,CAEA,GAAI,CAACvE,IAAI,CAAE,CACT,mBACEX,KAAA,QAAKgF,KAAK,CAAE,CAAEC,OAAO,CAAE,EAAG,CAAE,CAAAC,QAAA,eAC1BlF,KAAA,OAAAkF,QAAA,EAAI,eAAa,CAACzE,OAAO,CAACuC,IAAI,CAACrB,KAAK,EAAK,CAAC,cAC1C7B,IAAA,MAAAoF,QAAA,CAAG,gBAAc,CAAG,CAAC,cACrBpF,IAAA,WAAQqF,OAAO,CAAEA,CAAA,GAAMvE,OAAO,CAAC,OAAO,CAAE,CAAAsE,QAAA,CAAC,OAAK,CAAQ,CAAC,cACvDpF,IAAA,WAAQqF,OAAO,CAAEA,CAAA,GAAMvE,OAAO,CAAC,QAAQ,CAAE,CAAAsE,QAAA,CAAC,QAAM,CAAQ,CAAC,cACzDpF,IAAA,WAAQqF,OAAO,CAAEhD,OAAQ,CAAA+C,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACxC,CAAC,CAEV,CAEA,GAAIvE,IAAI,GAAK,OAAO,CAAE,CACpB,mBACEX,KAAA,QAAKgF,KAAK,CAAE,CAAEC,OAAO,CAAE,EAAG,CAAE,CAAAC,QAAA,eAC1BpF,IAAA,OAAAoF,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBlF,KAAA,MAAAkF,QAAA,EAAG,aAAW,CAACzE,OAAO,CAACuC,IAAI,CAACrB,KAAK,EAAI,CAAC,cAEtC3B,KAAA,QAAKgF,KAAK,CAAE,CAAEI,MAAM,CAAE,QAAS,CAAE,CAAAF,QAAA,eAC/BpF,IAAA,OAAAoF,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBpF,IAAA,UACEuF,WAAW,CAAC,cAAc,CAC1BC,KAAK,CAAEzE,WAAY,CACnB0E,QAAQ,CAAGC,CAAC,EAAK1E,cAAc,CAAC0E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACjD,CAAC,cACFxF,IAAA,WAAQqF,OAAO,CAAE/C,gBAAiB,CAAA8C,QAAA,CAAC,aAAW,CAAQ,CAAC,EACpD,CAAC,cAENlF,KAAA,QAAKgF,KAAK,CAAE,CAAEI,MAAM,CAAE,QAAS,CAAE,CAAAF,QAAA,eAC/BpF,IAAA,OAAAoF,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BpF,IAAA,UACEuF,WAAW,CAAC,eAAe,CAC3BC,KAAK,CAAEvE,MAAO,CACdwE,QAAQ,CAAGC,CAAC,EAAKxE,SAAS,CAACwE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC5C,CAAC,cACFxF,IAAA,UACEuF,WAAW,CAAC,eAAe,CAC3BC,KAAK,CAAErE,MAAO,CACdsE,QAAQ,CAAGC,CAAC,EAAKtE,SAAS,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC5C,CAAC,cACFxF,IAAA,WAAQqF,OAAO,CAAEZ,aAAc,CAAAW,QAAA,CAAC,KAAG,CAAQ,CAAC,EACzC,CAAC,cAENlF,KAAA,QAAKgF,KAAK,CAAE,CAAEI,MAAM,CAAE,QAAS,CAAE,CAAAF,QAAA,eAC/BpF,IAAA,OAAAoF,QAAA,CAAI,yCAAuC,CAAI,CAAC,cAChDpF,IAAA,UACEuF,WAAW,CAAC,eAAe,CAC3BC,KAAK,CAAEvE,MAAO,CACdwE,QAAQ,CAAGC,CAAC,EAAKxE,SAAS,CAACwE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC5C,CAAC,cACFxF,IAAA,WAAQqF,OAAO,CAAEJ,kBAAmB,CAAAG,QAAA,CAAC,eAAa,CAAQ,CAAC,EACxD,CAAC,cAENpF,IAAA,WAAQqF,OAAO,CAAEhD,OAAQ,CAAA+C,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACxC,CAAC,CAEV,CAEA,GAAIvE,IAAI,GAAK,QAAQ,CAAE,CACrB,mBACEX,KAAA,QAAKgF,KAAK,CAAE,CAAEC,OAAO,CAAE,EAAG,CAAE,CAAAC,QAAA,eAC1BpF,IAAA,OAAAoF,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBlF,KAAA,MAAAkF,QAAA,EAAG,aAAW,CAACzE,OAAO,CAACuC,IAAI,CAACrB,KAAK,EAAI,CAAC,cACtC7B,IAAA,MAAAoF,QAAA,CAAG,sDAAoD,CAAG,CAAC,cAC3DpF,IAAA,WAAQqF,OAAO,CAAEhD,OAAQ,CAAA+C,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACxC,CAAC,CAEV,CACF,CAEA,cAAe,CAAA1E,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}