{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Downloads\\\\escrow_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// If you prefer, you can import from .env directly, or define them in the .env\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\nfunction App() {\n  _s();\n  const [session, setSession] = useState(null);\n  const [role, setRole] = useState('');\n  const [sellerEmail, setSellerEmail] = useState('');\n  const [dealId, setDealId] = useState('');\n  const [amount, setAmount] = useState('');\n  useEffect(() => {\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n    });\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  }, []);\n  const signUp = async () => {\n    const email = prompt(\"Enter your email\");\n    const password = prompt(\"Enter your password\");\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) alert(error.message);\n  };\n  const signIn = async () => {\n    const email = prompt(\"Enter your email\");\n    const password = prompt(\"Enter your password\");\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) alert(error.message);\n  };\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    setRole('');\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // CREATE DEAL\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handleCreateDeal = async () => {\n    if (!sellerEmail) {\n      alert(\"Please enter seller's email\");\n      return;\n    }\n    // 1) find seller's user record in Supabase 'profiles' table\n    //    We assume there's a 'profiles' table with columns: id, email, wallet_address, ...\n    let {\n      data: sellers,\n      error: sellerError\n    } = await supabase.from('profiles').select('*').eq('email', sellerEmail);\n    if (sellerError) {\n      alert(sellerError.message);\n      return;\n    }\n    if (!sellers || sellers.length === 0) {\n      alert(\"Seller not found\");\n      return;\n    }\n    const seller = sellers[0];\n\n    // 2) Insert new deal in Supabase\n    let {\n      data: newDeals,\n      error: dealError\n    } = await supabase.from('deals').insert([{\n      buyer_id: session.user.id,\n      seller_id: seller.id,\n      status: 'PENDING'\n    }]).select();\n    if (dealError) {\n      alert(dealError.message);\n      return;\n    }\n    const newDeal = newDeals[0];\n    const dbDealId = newDeal.id;\n\n    // 3) Call backend to create the on-chain deal\n    try {\n      const response = await fetch('http://localhost:4242/create-escrow-deal', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dbDealId\n        })\n      });\n      const json = await response.json();\n      if (!json.success) {\n        alert('Failed to create on-chain deal: ' + json.message);\n        return;\n      }\n\n      // 4) Update the Supabase record with the returned onChain ID\n      const {\n        data: updated,\n        error: updateError\n      } = await supabase.from('deals').update({\n        deal_id_on_chain: json.dealIdOnChain\n      }).eq('id', dbDealId);\n      if (updateError) {\n        alert(\"Couldn't update deal with on-chain ID\");\n        return;\n      }\n      alert(`Deal created successfully! DB ID: ${dbDealId}, On-chain ID: ${json.dealIdOnChain}`);\n    } catch (err) {\n      console.error(err);\n      alert(\"Error calling create-escrow-deal\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // PAY DEAL (STRIPE)\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handlePayDeal = async () => {\n    if (!dealId || !amount) {\n      alert(\"Please enter dealId and amount in USD\");\n      return;\n    }\n    const intAmount = parseInt(amount) * 100; // convert to cents\n    try {\n      const res = await fetch('http://localhost:4242/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dealId,\n          amount: intAmount\n        })\n      });\n      const json = await res.json();\n      if (json.url) {\n        window.location.href = json.url; // redirect to Stripe\n      } else {\n        alert(\"Failed to create checkout session\");\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error creating checkout session\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // RELEASE FUNDS\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handleReleaseFunds = async () => {\n    if (!dealId) {\n      alert(\"Please enter dealId\");\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:4242/release-funds', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dealId\n        })\n      });\n      const json = await res.json();\n      if (json.success) {\n        alert(\"Funds released to seller!\");\n      } else {\n        alert(\"Failed to release funds: \" + json.message);\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error releasing funds\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // RENDER\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  if (!session) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome - Please Sign In or Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signIn,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n  if (!role) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Logged in as \", session.user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a role:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRole('buyer'),\n        children: \"Buyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRole('seller'),\n        children: \"Seller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signOut,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n  if (role === 'buyer') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buyer Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Logged in: \", session.user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a Deal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Seller Email\",\n          value: sellerEmail,\n          onChange: e => setSellerEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateDeal,\n          children: \"Create Deal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pay for Deal (Stripe)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Deal ID in DB\",\n          value: dealId,\n          onChange: e => setDealId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Amount in USD\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePayDeal,\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Release Funds (Buyer Confirms Delivery)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Deal ID in DB\",\n          value: dealId,\n          onChange: e => setDealId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReleaseFunds,\n          children: \"Release Funds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signOut,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n  if (role === 'seller') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Seller Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Logged in: \", session.user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here you could list your deals or track shipments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signOut,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(App, \"D24qhuHkIAusKUpsUbOBfXcEDck=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createClient","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","App","_s","session","setSession","role","setRole","sellerEmail","setSellerEmail","dealId","setDealId","amount","setAmount","auth","getSession","then","data","onAuthStateChange","_event","signUp","email","prompt","password","error","alert","message","signIn","signInWithPassword","signOut","handleCreateDeal","sellers","sellerError","from","select","eq","length","seller","newDeals","dealError","insert","buyer_id","user","id","seller_id","status","newDeal","dbDealId","response","fetch","method","headers","body","JSON","stringify","json","success","updated","updateError","update","deal_id_on_chain","dealIdOnChain","err","console","handlePayDeal","intAmount","parseInt","res","url","window","location","href","handleReleaseFunds","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","margin","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Downloads/escrow_project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL; \nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// If you prefer, you can import from .env directly, or define them in the .env\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nfunction App() {\n  const [session, setSession] = useState(null);\n  const [role, setRole] = useState('');\n  \n  const [sellerEmail, setSellerEmail] = useState('');\n  const [dealId, setDealId] = useState('');\n  const [amount, setAmount] = useState('');\n\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n    });\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  }, []);\n\n  const signUp = async () => {\n    const email = prompt(\"Enter your email\");\n    const password = prompt(\"Enter your password\");\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) alert(error.message);\n  };\n\n  const signIn = async () => {\n    const email = prompt(\"Enter your email\");\n    const password = prompt(\"Enter your password\");\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) alert(error.message);\n  };\n\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    setRole('');\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // CREATE DEAL\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handleCreateDeal = async () => {\n    if (!sellerEmail) {\n      alert(\"Please enter seller's email\");\n      return;\n    }\n    // 1) find seller's user record in Supabase 'profiles' table\n    //    We assume there's a 'profiles' table with columns: id, email, wallet_address, ...\n    let { data: sellers, error: sellerError } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('email', sellerEmail);\n\n    if (sellerError) {\n      alert(sellerError.message);\n      return;\n    }\n    if (!sellers || sellers.length === 0) {\n      alert(\"Seller not found\");\n      return;\n    }\n    const seller = sellers[0];\n\n    // 2) Insert new deal in Supabase\n    let { data: newDeals, error: dealError } = await supabase\n      .from('deals')\n      .insert([\n        {\n          buyer_id: session.user.id,\n          seller_id: seller.id,\n          status: 'PENDING'\n        }\n      ])\n      .select();\n\n    if (dealError) {\n      alert(dealError.message);\n      return;\n    }\n\n    const newDeal = newDeals[0];\n    const dbDealId = newDeal.id;\n\n    // 3) Call backend to create the on-chain deal\n    try {\n      const response = await fetch('http://localhost:4242/create-escrow-deal', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ dbDealId })\n      });\n      const json = await response.json();\n      if (!json.success) {\n        alert('Failed to create on-chain deal: ' + json.message);\n        return;\n      }\n\n      // 4) Update the Supabase record with the returned onChain ID\n      const { data: updated, error: updateError } = await supabase\n        .from('deals')\n        .update({ deal_id_on_chain: json.dealIdOnChain })\n        .eq('id', dbDealId);\n\n      if (updateError) {\n        alert(\"Couldn't update deal with on-chain ID\");\n        return;\n      }\n\n      alert(`Deal created successfully! DB ID: ${dbDealId}, On-chain ID: ${json.dealIdOnChain}`);\n\n    } catch (err) {\n      console.error(err);\n      alert(\"Error calling create-escrow-deal\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // PAY DEAL (STRIPE)\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handlePayDeal = async () => {\n    if (!dealId || !amount) {\n      alert(\"Please enter dealId and amount in USD\");\n      return;\n    }\n\n    const intAmount = parseInt(amount) * 100; // convert to cents\n    try {\n      const res = await fetch('http://localhost:4242/create-checkout-session', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ dealId, amount: intAmount })\n      });\n      const json = await res.json();\n      if (json.url) {\n        window.location.href = json.url; // redirect to Stripe\n      } else {\n        alert(\"Failed to create checkout session\");\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error creating checkout session\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // RELEASE FUNDS\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  const handleReleaseFunds = async () => {\n    if (!dealId) {\n      alert(\"Please enter dealId\");\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:4242/release-funds', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ dealId })\n      });\n      const json = await res.json();\n      if (json.success) {\n        alert(\"Funds released to seller!\");\n      } else {\n        alert(\"Failed to release funds: \" + json.message);\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error releasing funds\");\n    }\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // RENDER\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  if (!session) {\n    return (\n      <div style={{ padding: 20 }}>\n        <h2>Welcome - Please Sign In or Sign Up</h2>\n        <button onClick={signIn}>Sign In</button>\n        <button onClick={signUp}>Sign Up</button>\n      </div>\n    );\n  }\n\n  if (!role) {\n    return (\n      <div style={{ padding: 20 }}>\n        <h3>Logged in as {session.user.email}</h3>\n        <p>Select a role:</p>\n        <button onClick={() => setRole('buyer')}>Buyer</button>\n        <button onClick={() => setRole('seller')}>Seller</button>\n        <button onClick={signOut}>Sign Out</button>\n      </div>\n    );\n  }\n\n  if (role === 'buyer') {\n    return (\n      <div style={{ padding: 20 }}>\n        <h2>Buyer Dashboard</h2>\n        <p>Logged in: {session.user.email}</p>\n\n        <div style={{ margin: '20px 0' }}>\n          <h3>Create a Deal</h3>\n          <input\n            placeholder=\"Seller Email\"\n            value={sellerEmail}\n            onChange={(e) => setSellerEmail(e.target.value)}\n          />\n          <button onClick={handleCreateDeal}>Create Deal</button>\n        </div>\n\n        <div style={{ margin: '20px 0' }}>\n          <h3>Pay for Deal (Stripe)</h3>\n          <input\n            placeholder=\"Deal ID in DB\"\n            value={dealId}\n            onChange={(e) => setDealId(e.target.value)}\n          />\n          <input\n            placeholder=\"Amount in USD\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n          <button onClick={handlePayDeal}>Pay</button>\n        </div>\n\n        <div style={{ margin: '20px 0' }}>\n          <h3>Release Funds (Buyer Confirms Delivery)</h3>\n          <input\n            placeholder=\"Deal ID in DB\"\n            value={dealId}\n            onChange={(e) => setDealId(e.target.value)}\n          />\n          <button onClick={handleReleaseFunds}>Release Funds</button>\n        </div>\n\n        <button onClick={signOut}>Sign Out</button>\n      </div>\n    );\n  }\n\n  if (role === 'seller') {\n    return (\n      <div style={{ padding: 20 }}>\n        <h2>Seller Dashboard</h2>\n        <p>Logged in: {session.user.email}</p>\n        <p>Here you could list your deals or track shipments...</p>\n        <button onClick={signOut}>Sign Out</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;;AAE/D;AACA,MAAMC,QAAQ,GAAGT,YAAY,CAACG,WAAW,EAAEI,eAAe,CAAC;AAE3D,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACa,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE;QAAEb;MAAQ;IAAE,CAAC,KAAK;MACzDC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;IACFH,QAAQ,CAACa,IAAI,CAACI,iBAAiB,CAAC,CAACC,MAAM,EAAEf,OAAO,KAAK;MACnDC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,KAAK,GAAGC,MAAM,CAAC,kBAAkB,CAAC;IACxC,MAAMC,QAAQ,GAAGD,MAAM,CAAC,qBAAqB,CAAC;IAC9C,MAAM;MAAEL,IAAI;MAAEO;IAAM,CAAC,GAAG,MAAMvB,QAAQ,CAACa,IAAI,CAACM,MAAM,CAAC;MACjDC,KAAK;MACLE;IACF,CAAC,CAAC;IACF,IAAIC,KAAK,EAAEC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EACjC,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMN,KAAK,GAAGC,MAAM,CAAC,kBAAkB,CAAC;IACxC,MAAMC,QAAQ,GAAGD,MAAM,CAAC,qBAAqB,CAAC;IAC9C,MAAM;MAAEL,IAAI;MAAEO;IAAM,CAAC,GAAG,MAAMvB,QAAQ,CAACa,IAAI,CAACc,kBAAkB,CAAC;MAC7DP,KAAK;MACLE;IACF,CAAC,CAAC;IACF,IAAIC,KAAK,EAAEC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EACjC,CAAC;EAED,MAAMG,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAM5B,QAAQ,CAACa,IAAI,CAACe,OAAO,CAAC,CAAC;IAC7BtB,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;;EAED;EACA;EACA;EACA,MAAMuB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACtB,WAAW,EAAE;MAChBiB,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IACA;IACA;IACA,IAAI;MAAER,IAAI,EAAEc,OAAO;MAAEP,KAAK,EAAEQ;IAAY,CAAC,GAAG,MAAM/B,QAAQ,CACvDgC,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,OAAO,EAAE3B,WAAW,CAAC;IAE3B,IAAIwB,WAAW,EAAE;MACfP,KAAK,CAACO,WAAW,CAACN,OAAO,CAAC;MAC1B;IACF;IACA,IAAI,CAACK,OAAO,IAAIA,OAAO,CAACK,MAAM,KAAK,CAAC,EAAE;MACpCX,KAAK,CAAC,kBAAkB,CAAC;MACzB;IACF;IACA,MAAMY,MAAM,GAAGN,OAAO,CAAC,CAAC,CAAC;;IAEzB;IACA,IAAI;MAAEd,IAAI,EAAEqB,QAAQ;MAAEd,KAAK,EAAEe;IAAU,CAAC,GAAG,MAAMtC,QAAQ,CACtDgC,IAAI,CAAC,OAAO,CAAC,CACbO,MAAM,CAAC,CACN;MACEC,QAAQ,EAAErC,OAAO,CAACsC,IAAI,CAACC,EAAE;MACzBC,SAAS,EAAEP,MAAM,CAACM,EAAE;MACpBE,MAAM,EAAE;IACV,CAAC,CACF,CAAC,CACDX,MAAM,CAAC,CAAC;IAEX,IAAIK,SAAS,EAAE;MACbd,KAAK,CAACc,SAAS,CAACb,OAAO,CAAC;MACxB;IACF;IAEA,MAAMoB,OAAO,GAAGR,QAAQ,CAAC,CAAC,CAAC;IAC3B,MAAMS,QAAQ,GAAGD,OAAO,CAACH,EAAE;;IAE3B;IACA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAS,CAAC;MACnC,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QACjB/B,KAAK,CAAC,kCAAkC,GAAG8B,IAAI,CAAC7B,OAAO,CAAC;QACxD;MACF;;MAEA;MACA,MAAM;QAAET,IAAI,EAAEwC,OAAO;QAAEjC,KAAK,EAAEkC;MAAY,CAAC,GAAG,MAAMzD,QAAQ,CACzDgC,IAAI,CAAC,OAAO,CAAC,CACb0B,MAAM,CAAC;QAAEC,gBAAgB,EAAEL,IAAI,CAACM;MAAc,CAAC,CAAC,CAChD1B,EAAE,CAAC,IAAI,EAAEY,QAAQ,CAAC;MAErB,IAAIW,WAAW,EAAE;QACfjC,KAAK,CAAC,uCAAuC,CAAC;QAC9C;MACF;MAEAA,KAAK,CAAC,qCAAqCsB,QAAQ,kBAAkBQ,IAAI,CAACM,aAAa,EAAE,CAAC;IAE5F,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACvC,KAAK,CAACsC,GAAG,CAAC;MAClBrC,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;;EAED;EACA;EACA;EACA,MAAMuC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACtD,MAAM,IAAI,CAACE,MAAM,EAAE;MACtBa,KAAK,CAAC,uCAAuC,CAAC;MAC9C;IACF;IAEA,MAAMwC,SAAS,GAAGC,QAAQ,CAACtD,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;IAC1C,IAAI;MACF,MAAMuD,GAAG,GAAG,MAAMlB,KAAK,CAAC,+CAA+C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE5C,MAAM;UAAEE,MAAM,EAAEqD;QAAU,CAAC;MACpD,CAAC,CAAC;MACF,MAAMV,IAAI,GAAG,MAAMY,GAAG,CAACZ,IAAI,CAAC,CAAC;MAC7B,IAAIA,IAAI,CAACa,GAAG,EAAE;QACZC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGhB,IAAI,CAACa,GAAG,CAAC,CAAC;MACnC,CAAC,MAAM;QACL3C,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOqC,GAAG,EAAE;MACZC,OAAO,CAACvC,KAAK,CAACsC,GAAG,CAAC;MAClBrC,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;;EAED;EACA;EACA;EACA,MAAM+C,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAAC9D,MAAM,EAAE;MACXe,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACF;IACA,IAAI;MACF,MAAM0C,GAAG,GAAG,MAAMlB,KAAK,CAAC,qCAAqC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE5C;QAAO,CAAC;MACjC,CAAC,CAAC;MACF,MAAM6C,IAAI,GAAG,MAAMY,GAAG,CAACZ,IAAI,CAAC,CAAC;MAC7B,IAAIA,IAAI,CAACC,OAAO,EAAE;QAChB/B,KAAK,CAAC,2BAA2B,CAAC;MACpC,CAAC,MAAM;QACLA,KAAK,CAAC,2BAA2B,GAAG8B,IAAI,CAAC7B,OAAO,CAAC;MACnD;IACF,CAAC,CAAC,OAAOoC,GAAG,EAAE;MACZC,OAAO,CAACvC,KAAK,CAACsC,GAAG,CAAC;MAClBrC,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;;EAED;EACA;EACA;;EAEA,IAAI,CAACrB,OAAO,EAAE;IACZ,oBACEV,OAAA;MAAK+E,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAAAC,QAAA,gBAC1BjF,OAAA;QAAAiF,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CrF,OAAA;QAAQsF,OAAO,EAAErD,MAAO;QAAAgD,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCrF,OAAA;QAAQsF,OAAO,EAAE5D,MAAO;QAAAuD,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAEV;EAEA,IAAI,CAACzE,IAAI,EAAE;IACT,oBACEZ,OAAA;MAAK+E,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAAAC,QAAA,gBAC1BjF,OAAA;QAAAiF,QAAA,GAAI,eAAa,EAACvE,OAAO,CAACsC,IAAI,CAACrB,KAAK;MAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1CrF,OAAA;QAAAiF,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrBrF,OAAA;QAAQsF,OAAO,EAAEA,CAAA,KAAMzE,OAAO,CAAC,OAAO,CAAE;QAAAoE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvDrF,OAAA;QAAQsF,OAAO,EAAEA,CAAA,KAAMzE,OAAO,CAAC,QAAQ,CAAE;QAAAoE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzDrF,OAAA;QAAQsF,OAAO,EAAEnD,OAAQ;QAAA8C,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAEV;EAEA,IAAIzE,IAAI,KAAK,OAAO,EAAE;IACpB,oBACEZ,OAAA;MAAK+E,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAAAC,QAAA,gBAC1BjF,OAAA;QAAAiF,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBrF,OAAA;QAAAiF,QAAA,GAAG,aAAW,EAACvE,OAAO,CAACsC,IAAI,CAACrB,KAAK;MAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEtCrF,OAAA;QAAK+E,KAAK,EAAE;UAAEQ,MAAM,EAAE;QAAS,CAAE;QAAAN,QAAA,gBAC/BjF,OAAA;UAAAiF,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBrF,OAAA;UACEwF,WAAW,EAAC,cAAc;UAC1BC,KAAK,EAAE3E,WAAY;UACnB4E,QAAQ,EAAGC,CAAC,IAAK5E,cAAc,CAAC4E,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACFrF,OAAA;UAAQsF,OAAO,EAAElD,gBAAiB;UAAA6C,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eAENrF,OAAA;QAAK+E,KAAK,EAAE;UAAEQ,MAAM,EAAE;QAAS,CAAE;QAAAN,QAAA,gBAC/BjF,OAAA;UAAAiF,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BrF,OAAA;UACEwF,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAEzE,MAAO;UACd0E,QAAQ,EAAGC,CAAC,IAAK1E,SAAS,CAAC0E,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACFrF,OAAA;UACEwF,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAEvE,MAAO;UACdwE,QAAQ,EAAGC,CAAC,IAAKxE,SAAS,CAACwE,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACFrF,OAAA;UAAQsF,OAAO,EAAEhB,aAAc;UAAAW,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eAENrF,OAAA;QAAK+E,KAAK,EAAE;UAAEQ,MAAM,EAAE;QAAS,CAAE;QAAAN,QAAA,gBAC/BjF,OAAA;UAAAiF,QAAA,EAAI;QAAuC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChDrF,OAAA;UACEwF,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAEzE,MAAO;UACd0E,QAAQ,EAAGC,CAAC,IAAK1E,SAAS,CAAC0E,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACFrF,OAAA;UAAQsF,OAAO,EAAER,kBAAmB;UAAAG,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eAENrF,OAAA;QAAQsF,OAAO,EAAEnD,OAAQ;QAAA8C,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAEV;EAEA,IAAIzE,IAAI,KAAK,QAAQ,EAAE;IACrB,oBACEZ,OAAA;MAAK+E,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAAAC,QAAA,gBAC1BjF,OAAA;QAAAiF,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBrF,OAAA;QAAAiF,QAAA,GAAG,aAAW,EAACvE,OAAO,CAACsC,IAAI,CAACrB,KAAK;MAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCrF,OAAA;QAAAiF,QAAA,EAAG;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3DrF,OAAA;QAAQsF,OAAO,EAAEnD,OAAQ;QAAA8C,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAEV;AACF;AAAC5E,EAAA,CA/PQD,GAAG;AAAAqF,EAAA,GAAHrF,GAAG;AAiQZ,eAAeA,GAAG;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}